{"ast":null,"code":"import { clickConfirm } from './staticMethods/dom.js';\nimport { DismissReason } from './utils/DismissReason.js';\nimport * as dom from './utils/dom/index.js';\nimport { callIfFunction } from './utils/utils.js';\n\n/**\n * @param {GlobalState} globalState\n */\nexport const removeKeydownHandler = globalState => {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = false;\n  }\n};\n\n/**\n * @param {GlobalState} globalState\n * @param {SweetAlertOptions} innerParams\n * @param {*} dismissWith\n */\nexport const addKeydownHandler = (globalState, innerParams, dismissWith) => {\n  removeKeydownHandler(globalState);\n  if (!innerParams.toast) {\n    globalState.keydownHandler = e => keydownHandler(innerParams, e, dismissWith);\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : dom.getPopup();\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = true;\n  }\n};\n\n/**\n * @param {number} index\n * @param {number} increment\n */\nexport const setFocus = (index, increment) => {\n  const focusableElements = dom.getFocusableElements();\n  // search for visible elements and select the next possible match\n  if (focusableElements.length) {\n    index = index + increment;\n\n    // rollover to first item\n    if (index === focusableElements.length) {\n      index = 0;\n\n      // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1;\n    }\n    focusableElements[index].focus();\n    return;\n  }\n  // no visible focusable elements, focus the popup\n  dom.getPopup()?.focus();\n};\nconst arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\nconst arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n/**\n * @param {SweetAlertOptions} innerParams\n * @param {KeyboardEvent} event\n * @param {Function} dismissWith\n */\nconst keydownHandler = (innerParams, event, dismissWith) => {\n  if (!innerParams) {\n    return; // This instance has already been destroyed\n  }\n\n  // Ignore keydown during IME composition\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n  // https://github.com/sweetalert2/sweetalert2/issues/720\n  // https://github.com/sweetalert2/sweetalert2/issues/2406\n  if (event.isComposing || event.keyCode === 229) {\n    return;\n  }\n  if (innerParams.stopKeydownPropagation) {\n    event.stopPropagation();\n  }\n\n  // ENTER\n  if (event.key === 'Enter') {\n    handleEnter(event, innerParams);\n  }\n\n  // TAB\n  else if (event.key === 'Tab') {\n    handleTab(event);\n  }\n\n  // ARROWS - switch focus between buttons\n  else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {\n    handleArrows(event.key);\n  }\n\n  // ESC\n  else if (event.key === 'Escape') {\n    handleEsc(event, innerParams, dismissWith);\n  }\n};\n\n/**\n * @param {KeyboardEvent} event\n * @param {SweetAlertOptions} innerParams\n */\nconst handleEnter = (event, innerParams) => {\n  // https://github.com/sweetalert2/sweetalert2/issues/2386\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return;\n  }\n  const input = dom.getInput(dom.getPopup(), innerParams.input);\n  if (event.target && input && event.target instanceof HTMLElement && event.target.outerHTML === input.outerHTML) {\n    if (['textarea', 'file'].includes(innerParams.input)) {\n      return; // do not submit\n    }\n\n    clickConfirm();\n    event.preventDefault();\n  }\n};\n\n/**\n * @param {KeyboardEvent} event\n */\nconst handleTab = event => {\n  const targetElement = event.target;\n  const focusableElements = dom.getFocusableElements();\n  let btnIndex = -1;\n  for (let i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i;\n      break;\n    }\n  }\n\n  // Cycle to the next button\n  if (!event.shiftKey) {\n    setFocus(btnIndex, 1);\n  }\n\n  // Cycle to the prev button\n  else {\n    setFocus(btnIndex, -1);\n  }\n  event.stopPropagation();\n  event.preventDefault();\n};\n\n/**\n * @param {string} key\n */\nconst handleArrows = key => {\n  const actions = dom.getActions();\n  const confirmButton = dom.getConfirmButton();\n  const denyButton = dom.getDenyButton();\n  const cancelButton = dom.getCancelButton();\n  if (!actions || !confirmButton || !denyButton || !cancelButton) {\n    return;\n  }\n  /** @type HTMLElement[] */\n  const buttons = [confirmButton, denyButton, cancelButton];\n  if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {\n    return;\n  }\n  const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n  let buttonToFocus = document.activeElement;\n  if (!buttonToFocus) {\n    return;\n  }\n  for (let i = 0; i < actions.children.length; i++) {\n    buttonToFocus = buttonToFocus[sibling];\n    if (!buttonToFocus) {\n      return;\n    }\n    if (buttonToFocus instanceof HTMLButtonElement && dom.isVisible(buttonToFocus)) {\n      break;\n    }\n  }\n  if (buttonToFocus instanceof HTMLButtonElement) {\n    buttonToFocus.focus();\n  }\n};\n\n/**\n * @param {KeyboardEvent} event\n * @param {SweetAlertOptions} innerParams\n * @param {Function} dismissWith\n */\nconst handleEsc = (event, innerParams, dismissWith) => {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    event.preventDefault();\n    dismissWith(DismissReason.esc);\n  }\n};","map":{"version":3,"names":["clickConfirm","DismissReason","dom","callIfFunction","removeKeydownHandler","globalState","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","addKeydownHandler","innerParams","dismissWith","toast","e","window","getPopup","addEventListener","setFocus","index","increment","focusableElements","getFocusableElements","length","focus","arrowKeysNextButton","arrowKeysPreviousButton","event","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","includes","handleArrows","handleEsc","allowEnterKey","input","getInput","target","HTMLElement","outerHTML","preventDefault","targetElement","btnIndex","i","shiftKey","actions","getActions","confirmButton","getConfirmButton","denyButton","getDenyButton","cancelButton","getCancelButton","buttons","document","activeElement","sibling","buttonToFocus","children","HTMLButtonElement","isVisible","allowEscapeKey","esc"],"sources":["E:/React Project Two/node_modules/sweetalert2/src/keydown-handler.js"],"sourcesContent":["import { clickConfirm } from './staticMethods/dom.js'\nimport { DismissReason } from './utils/DismissReason.js'\nimport * as dom from './utils/dom/index.js'\nimport { callIfFunction } from './utils/utils.js'\n\n/**\n * @param {GlobalState} globalState\n */\nexport const removeKeydownHandler = (globalState) => {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = false\n  }\n}\n\n/**\n * @param {GlobalState} globalState\n * @param {SweetAlertOptions} innerParams\n * @param {*} dismissWith\n */\nexport const addKeydownHandler = (globalState, innerParams, dismissWith) => {\n  removeKeydownHandler(globalState)\n  if (!innerParams.toast) {\n    globalState.keydownHandler = (e) => keydownHandler(innerParams, e, dismissWith)\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : dom.getPopup()\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = true\n  }\n}\n\n/**\n * @param {number} index\n * @param {number} increment\n */\nexport const setFocus = (index, increment) => {\n  const focusableElements = dom.getFocusableElements()\n  // search for visible elements and select the next possible match\n  if (focusableElements.length) {\n    index = index + increment\n\n    // rollover to first item\n    if (index === focusableElements.length) {\n      index = 0\n\n      // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1\n    }\n\n    focusableElements[index].focus()\n    return\n  }\n  // no visible focusable elements, focus the popup\n  dom.getPopup()?.focus()\n}\n\nconst arrowKeysNextButton = ['ArrowRight', 'ArrowDown']\n\nconst arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp']\n\n/**\n * @param {SweetAlertOptions} innerParams\n * @param {KeyboardEvent} event\n * @param {Function} dismissWith\n */\nconst keydownHandler = (innerParams, event, dismissWith) => {\n  if (!innerParams) {\n    return // This instance has already been destroyed\n  }\n\n  // Ignore keydown during IME composition\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n  // https://github.com/sweetalert2/sweetalert2/issues/720\n  // https://github.com/sweetalert2/sweetalert2/issues/2406\n  if (event.isComposing || event.keyCode === 229) {\n    return\n  }\n\n  if (innerParams.stopKeydownPropagation) {\n    event.stopPropagation()\n  }\n\n  // ENTER\n  if (event.key === 'Enter') {\n    handleEnter(event, innerParams)\n  }\n\n  // TAB\n  else if (event.key === 'Tab') {\n    handleTab(event)\n  }\n\n  // ARROWS - switch focus between buttons\n  else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {\n    handleArrows(event.key)\n  }\n\n  // ESC\n  else if (event.key === 'Escape') {\n    handleEsc(event, innerParams, dismissWith)\n  }\n}\n\n/**\n * @param {KeyboardEvent} event\n * @param {SweetAlertOptions} innerParams\n */\nconst handleEnter = (event, innerParams) => {\n  // https://github.com/sweetalert2/sweetalert2/issues/2386\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return\n  }\n\n  const input = dom.getInput(dom.getPopup(), innerParams.input)\n\n  if (event.target && input && event.target instanceof HTMLElement && event.target.outerHTML === input.outerHTML) {\n    if (['textarea', 'file'].includes(innerParams.input)) {\n      return // do not submit\n    }\n\n    clickConfirm()\n    event.preventDefault()\n  }\n}\n\n/**\n * @param {KeyboardEvent} event\n */\nconst handleTab = (event) => {\n  const targetElement = event.target\n\n  const focusableElements = dom.getFocusableElements()\n  let btnIndex = -1\n  for (let i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i\n      break\n    }\n  }\n\n  // Cycle to the next button\n  if (!event.shiftKey) {\n    setFocus(btnIndex, 1)\n  }\n\n  // Cycle to the prev button\n  else {\n    setFocus(btnIndex, -1)\n  }\n\n  event.stopPropagation()\n  event.preventDefault()\n}\n\n/**\n * @param {string} key\n */\nconst handleArrows = (key) => {\n  const actions = dom.getActions()\n  const confirmButton = dom.getConfirmButton()\n  const denyButton = dom.getDenyButton()\n  const cancelButton = dom.getCancelButton()\n  if (!actions || !confirmButton || !denyButton || !cancelButton) {\n    return\n  }\n  /** @type HTMLElement[] */\n  const buttons = [confirmButton, denyButton, cancelButton]\n  if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {\n    return\n  }\n  const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling'\n  let buttonToFocus = document.activeElement\n  if (!buttonToFocus) {\n    return\n  }\n  for (let i = 0; i < actions.children.length; i++) {\n    buttonToFocus = buttonToFocus[sibling]\n    if (!buttonToFocus) {\n      return\n    }\n    if (buttonToFocus instanceof HTMLButtonElement && dom.isVisible(buttonToFocus)) {\n      break\n    }\n  }\n  if (buttonToFocus instanceof HTMLButtonElement) {\n    buttonToFocus.focus()\n  }\n}\n\n/**\n * @param {KeyboardEvent} event\n * @param {SweetAlertOptions} innerParams\n * @param {Function} dismissWith\n */\nconst handleEsc = (event, innerParams, dismissWith) => {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    event.preventDefault()\n    dismissWith(DismissReason.esc)\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;AACrD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAO,KAAKC,GAAG,MAAM,sBAAsB;AAC3C,SAASC,cAAc,QAAQ,kBAAkB;;AAEjD;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAIC,WAAW,IAAK;EACnD,IAAIA,WAAW,CAACC,aAAa,IAAID,WAAW,CAACE,mBAAmB,EAAE;IAChEF,WAAW,CAACC,aAAa,CAACE,mBAAmB,CAAC,SAAS,EAAEH,WAAW,CAACI,cAAc,EAAE;MACnFC,OAAO,EAAEL,WAAW,CAACM;IACvB,CAAC,CAAC;IACFN,WAAW,CAACE,mBAAmB,GAAG,KAAK;EACzC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,iBAAiB,GAAGA,CAACP,WAAW,EAAEQ,WAAW,EAAEC,WAAW,KAAK;EAC1EV,oBAAoB,CAACC,WAAW,CAAC;EACjC,IAAI,CAACQ,WAAW,CAACE,KAAK,EAAE;IACtBV,WAAW,CAACI,cAAc,GAAIO,CAAC,IAAKP,cAAc,CAACI,WAAW,EAAEG,CAAC,EAAEF,WAAW,CAAC;IAC/ET,WAAW,CAACC,aAAa,GAAGO,WAAW,CAACF,sBAAsB,GAAGM,MAAM,GAAGf,GAAG,CAACgB,QAAQ,CAAC,CAAC;IACxFb,WAAW,CAACM,sBAAsB,GAAGE,WAAW,CAACF,sBAAsB;IACvEN,WAAW,CAACC,aAAa,CAACa,gBAAgB,CAAC,SAAS,EAAEd,WAAW,CAACI,cAAc,EAAE;MAChFC,OAAO,EAAEL,WAAW,CAACM;IACvB,CAAC,CAAC;IACFN,WAAW,CAACE,mBAAmB,GAAG,IAAI;EACxC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMa,QAAQ,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;EAC5C,MAAMC,iBAAiB,GAAGrB,GAAG,CAACsB,oBAAoB,CAAC,CAAC;EACpD;EACA,IAAID,iBAAiB,CAACE,MAAM,EAAE;IAC5BJ,KAAK,GAAGA,KAAK,GAAGC,SAAS;;IAEzB;IACA,IAAID,KAAK,KAAKE,iBAAiB,CAACE,MAAM,EAAE;MACtCJ,KAAK,GAAG,CAAC;;MAET;IACF,CAAC,MAAM,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;MACvBA,KAAK,GAAGE,iBAAiB,CAACE,MAAM,GAAG,CAAC;IACtC;IAEAF,iBAAiB,CAACF,KAAK,CAAC,CAACK,KAAK,CAAC,CAAC;IAChC;EACF;EACA;EACAxB,GAAG,CAACgB,QAAQ,CAAC,CAAC,EAAEQ,KAAK,CAAC,CAAC;AACzB,CAAC;AAED,MAAMC,mBAAmB,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC;AAEvD,MAAMC,uBAAuB,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC;;AAExD;AACA;AACA;AACA;AACA;AACA,MAAMnB,cAAc,GAAGA,CAACI,WAAW,EAAEgB,KAAK,EAAEf,WAAW,KAAK;EAC1D,IAAI,CAACD,WAAW,EAAE;IAChB,OAAM,CAAC;EACT;;EAEA;EACA;EACA;EACA;EACA,IAAIgB,KAAK,CAACC,WAAW,IAAID,KAAK,CAACE,OAAO,KAAK,GAAG,EAAE;IAC9C;EACF;EAEA,IAAIlB,WAAW,CAACmB,sBAAsB,EAAE;IACtCH,KAAK,CAACI,eAAe,CAAC,CAAC;EACzB;;EAEA;EACA,IAAIJ,KAAK,CAACK,GAAG,KAAK,OAAO,EAAE;IACzBC,WAAW,CAACN,KAAK,EAAEhB,WAAW,CAAC;EACjC;;EAEA;EAAA,KACK,IAAIgB,KAAK,CAACK,GAAG,KAAK,KAAK,EAAE;IAC5BE,SAAS,CAACP,KAAK,CAAC;EAClB;;EAEA;EAAA,KACK,IAAI,CAAC,GAAGF,mBAAmB,EAAE,GAAGC,uBAAuB,CAAC,CAACS,QAAQ,CAACR,KAAK,CAACK,GAAG,CAAC,EAAE;IACjFI,YAAY,CAACT,KAAK,CAACK,GAAG,CAAC;EACzB;;EAEA;EAAA,KACK,IAAIL,KAAK,CAACK,GAAG,KAAK,QAAQ,EAAE;IAC/BK,SAAS,CAACV,KAAK,EAAEhB,WAAW,EAAEC,WAAW,CAAC;EAC5C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMqB,WAAW,GAAGA,CAACN,KAAK,EAAEhB,WAAW,KAAK;EAC1C;EACA,IAAI,CAACV,cAAc,CAACU,WAAW,CAAC2B,aAAa,CAAC,EAAE;IAC9C;EACF;EAEA,MAAMC,KAAK,GAAGvC,GAAG,CAACwC,QAAQ,CAACxC,GAAG,CAACgB,QAAQ,CAAC,CAAC,EAAEL,WAAW,CAAC4B,KAAK,CAAC;EAE7D,IAAIZ,KAAK,CAACc,MAAM,IAAIF,KAAK,IAAIZ,KAAK,CAACc,MAAM,YAAYC,WAAW,IAAIf,KAAK,CAACc,MAAM,CAACE,SAAS,KAAKJ,KAAK,CAACI,SAAS,EAAE;IAC9G,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAACR,QAAQ,CAACxB,WAAW,CAAC4B,KAAK,CAAC,EAAE;MACpD,OAAM,CAAC;IACT;;IAEAzC,YAAY,CAAC,CAAC;IACd6B,KAAK,CAACiB,cAAc,CAAC,CAAC;EACxB;AACF,CAAC;;AAED;AACA;AACA;AACA,MAAMV,SAAS,GAAIP,KAAK,IAAK;EAC3B,MAAMkB,aAAa,GAAGlB,KAAK,CAACc,MAAM;EAElC,MAAMpB,iBAAiB,GAAGrB,GAAG,CAACsB,oBAAoB,CAAC,CAAC;EACpD,IAAIwB,QAAQ,GAAG,CAAC,CAAC;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,iBAAiB,CAACE,MAAM,EAAEwB,CAAC,EAAE,EAAE;IACjD,IAAIF,aAAa,KAAKxB,iBAAiB,CAAC0B,CAAC,CAAC,EAAE;MAC1CD,QAAQ,GAAGC,CAAC;MACZ;IACF;EACF;;EAEA;EACA,IAAI,CAACpB,KAAK,CAACqB,QAAQ,EAAE;IACnB9B,QAAQ,CAAC4B,QAAQ,EAAE,CAAC,CAAC;EACvB;;EAEA;EAAA,KACK;IACH5B,QAAQ,CAAC4B,QAAQ,EAAE,CAAC,CAAC,CAAC;EACxB;EAEAnB,KAAK,CAACI,eAAe,CAAC,CAAC;EACvBJ,KAAK,CAACiB,cAAc,CAAC,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACA,MAAMR,YAAY,GAAIJ,GAAG,IAAK;EAC5B,MAAMiB,OAAO,GAAGjD,GAAG,CAACkD,UAAU,CAAC,CAAC;EAChC,MAAMC,aAAa,GAAGnD,GAAG,CAACoD,gBAAgB,CAAC,CAAC;EAC5C,MAAMC,UAAU,GAAGrD,GAAG,CAACsD,aAAa,CAAC,CAAC;EACtC,MAAMC,YAAY,GAAGvD,GAAG,CAACwD,eAAe,CAAC,CAAC;EAC1C,IAAI,CAACP,OAAO,IAAI,CAACE,aAAa,IAAI,CAACE,UAAU,IAAI,CAACE,YAAY,EAAE;IAC9D;EACF;EACA;EACA,MAAME,OAAO,GAAG,CAACN,aAAa,EAAEE,UAAU,EAAEE,YAAY,CAAC;EACzD,IAAIG,QAAQ,CAACC,aAAa,YAAYjB,WAAW,IAAI,CAACe,OAAO,CAACtB,QAAQ,CAACuB,QAAQ,CAACC,aAAa,CAAC,EAAE;IAC9F;EACF;EACA,MAAMC,OAAO,GAAGnC,mBAAmB,CAACU,QAAQ,CAACH,GAAG,CAAC,GAAG,oBAAoB,GAAG,wBAAwB;EACnG,IAAI6B,aAAa,GAAGH,QAAQ,CAACC,aAAa;EAC1C,IAAI,CAACE,aAAa,EAAE;IAClB;EACF;EACA,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,OAAO,CAACa,QAAQ,CAACvC,MAAM,EAAEwB,CAAC,EAAE,EAAE;IAChDc,aAAa,GAAGA,aAAa,CAACD,OAAO,CAAC;IACtC,IAAI,CAACC,aAAa,EAAE;MAClB;IACF;IACA,IAAIA,aAAa,YAAYE,iBAAiB,IAAI/D,GAAG,CAACgE,SAAS,CAACH,aAAa,CAAC,EAAE;MAC9E;IACF;EACF;EACA,IAAIA,aAAa,YAAYE,iBAAiB,EAAE;IAC9CF,aAAa,CAACrC,KAAK,CAAC,CAAC;EACvB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMa,SAAS,GAAGA,CAACV,KAAK,EAAEhB,WAAW,EAAEC,WAAW,KAAK;EACrD,IAAIX,cAAc,CAACU,WAAW,CAACsD,cAAc,CAAC,EAAE;IAC9CtC,KAAK,CAACiB,cAAc,CAAC,CAAC;IACtBhC,WAAW,CAACb,aAAa,CAACmE,GAAG,CAAC;EAChC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}