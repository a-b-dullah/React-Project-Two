{"ast":null,"code":"import { swalClasses } from './classes.js';\n\n/**\n * Measure scrollbar width for padding body during modal show/hide\n * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n *\n * @returns {number}\n */\nexport const measureScrollbar = () => {\n  const scrollDiv = document.createElement('div');\n  scrollDiv.className = swalClasses['scrollbar-measure'];\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n};\n\n/**\n * Remember state in cases where opening and handling a modal will fiddle with it.\n * @type {number | null}\n */\nlet previousBodyPadding = null;\n\n/**\n * @param {string} initialBodyOverflow\n */\nexport const replaceScrollbarWithPadding = initialBodyOverflow => {\n  // for queues, do not do this more than once\n  if (previousBodyPadding !== null) {\n    return;\n  }\n  // if the body has overflow\n  if (document.body.scrollHeight > window.innerHeight || initialBodyOverflow === 'scroll' // https://github.com/sweetalert2/sweetalert2/issues/2663\n  ) {\n    // add padding so the content doesn't shift after removal of scrollbar\n    previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n    document.body.style.paddingRight = `${previousBodyPadding + measureScrollbar()}px`;\n  }\n};\nexport const undoReplaceScrollbarWithPadding = () => {\n  if (previousBodyPadding !== null) {\n    document.body.style.paddingRight = `${previousBodyPadding}px`;\n    previousBodyPadding = null;\n  }\n};","map":{"version":3,"names":["swalClasses","measureScrollbar","scrollDiv","document","createElement","className","body","appendChild","scrollbarWidth","getBoundingClientRect","width","clientWidth","removeChild","previousBodyPadding","replaceScrollbarWithPadding","initialBodyOverflow","scrollHeight","window","innerHeight","parseInt","getComputedStyle","getPropertyValue","style","paddingRight","undoReplaceScrollbarWithPadding"],"sources":["E:/React Project Two/node_modules/sweetalert2/src/utils/scrollbar.js"],"sourcesContent":["import { swalClasses } from './classes.js'\n\n/**\n * Measure scrollbar width for padding body during modal show/hide\n * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n *\n * @returns {number}\n */\nexport const measureScrollbar = () => {\n  const scrollDiv = document.createElement('div')\n  scrollDiv.className = swalClasses['scrollbar-measure']\n  document.body.appendChild(scrollDiv)\n  const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth\n  document.body.removeChild(scrollDiv)\n  return scrollbarWidth\n}\n\n/**\n * Remember state in cases where opening and handling a modal will fiddle with it.\n * @type {number | null}\n */\nlet previousBodyPadding = null\n\n/**\n * @param {string} initialBodyOverflow\n */\nexport const replaceScrollbarWithPadding = (initialBodyOverflow) => {\n  // for queues, do not do this more than once\n  if (previousBodyPadding !== null) {\n    return\n  }\n  // if the body has overflow\n  if (\n    document.body.scrollHeight > window.innerHeight ||\n    initialBodyOverflow === 'scroll' // https://github.com/sweetalert2/sweetalert2/issues/2663\n  ) {\n    // add padding so the content doesn't shift after removal of scrollbar\n    previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'))\n    document.body.style.paddingRight = `${previousBodyPadding + measureScrollbar()}px`\n  }\n}\n\nexport const undoReplaceScrollbarWithPadding = () => {\n  if (previousBodyPadding !== null) {\n    document.body.style.paddingRight = `${previousBodyPadding}px`\n    previousBodyPadding = null\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC/CF,SAAS,CAACG,SAAS,GAAGL,WAAW,CAAC,mBAAmB,CAAC;EACtDG,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,SAAS,CAAC;EACpC,MAAMM,cAAc,GAAGN,SAAS,CAACO,qBAAqB,CAAC,CAAC,CAACC,KAAK,GAAGR,SAAS,CAACS,WAAW;EACtFR,QAAQ,CAACG,IAAI,CAACM,WAAW,CAACV,SAAS,CAAC;EACpC,OAAOM,cAAc;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA,IAAIK,mBAAmB,GAAG,IAAI;;AAE9B;AACA;AACA;AACA,OAAO,MAAMC,2BAA2B,GAAIC,mBAAmB,IAAK;EAClE;EACA,IAAIF,mBAAmB,KAAK,IAAI,EAAE;IAChC;EACF;EACA;EACA,IACEV,QAAQ,CAACG,IAAI,CAACU,YAAY,GAAGC,MAAM,CAACC,WAAW,IAC/CH,mBAAmB,KAAK,QAAQ,CAAC;EAAA,EACjC;IACA;IACAF,mBAAmB,GAAGM,QAAQ,CAACF,MAAM,CAACG,gBAAgB,CAACjB,QAAQ,CAACG,IAAI,CAAC,CAACe,gBAAgB,CAAC,eAAe,CAAC,CAAC;IACxGlB,QAAQ,CAACG,IAAI,CAACgB,KAAK,CAACC,YAAY,GAAI,GAAEV,mBAAmB,GAAGZ,gBAAgB,CAAC,CAAE,IAAG;EACpF;AACF,CAAC;AAED,OAAO,MAAMuB,+BAA+B,GAAGA,CAAA,KAAM;EACnD,IAAIX,mBAAmB,KAAK,IAAI,EAAE;IAChCV,QAAQ,CAACG,IAAI,CAACgB,KAAK,CAACC,YAAY,GAAI,GAAEV,mBAAoB,IAAG;IAC7DA,mBAAmB,GAAG,IAAI;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}